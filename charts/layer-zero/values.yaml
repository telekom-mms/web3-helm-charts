# yamllint disable rule:line-length
---
## @section Image parameters
## @param image.registry The Docker registry for the image
## @param image.repository The Docker repository for the image
## @param image.tag The Docker image tag
## @param image.pullPolicy The image pull policy
image:
  registry: "us-east1-docker.pkg.dev/lz-docker"
  repository: "gasolina/gasolina"
  tag: "1.1.26"
  pullPolicy: "IfNotPresent"

## @section Deployment parameters
## @param replicaCount The number of replicas
## @param updateStrategy.type The update strategy type of the StatefulSet / Deployment
## @param updateStrategy.rollingUpdate The rolling update configuration of the StatefulSet / Deployment
replicaCount: 1
updateStrategy:
  type: "RollingUpdate"
  rollingUpdate: {}

## @section Image pull secrets
## @param imagePullSecrets The secrets for pulling images from a private registry
imagePullSecrets: []

## @section Resource parameters
## @param resources.requests.cpu CPU resource requests
## @param resources.requests.memory Memory resource requests
## @param resources.limits.cpu CPU resource limits
## @param resources.limits.memory Memory resource limits
resources:
  requests:
    cpu: "4"
    memory: "8Gi"
  limits:
    cpu: "6"
    memory: "8Gi"

## @section Service parameters
## @param service.type Kubernetes service type, use "LoadBalancer" for external communication
## @param service.port `SERVER_PORT` Service port
## @param service.annotations Annotations for the service
## @param service.keepResourcePolicy If type is "LoadBalancer" and this is set to true, the service will not be deleted when the chart is uninstalled
service:
  type: "ClusterIP"
  port: 8081
  annotations: {}
  keepResourcePolicy: false

## @section Ingress parameters
ingress:
  ## @param ingress.enabled Enable ingress controller resource
  enabled: false
  ## @param ingress.annotations Annotations for the Ingress resource
  annotations: {}
  ## @param ingress.extraLabels Additional labels for the Ingress resource
  extraLabels: {}
  ## @param ingress.ingressClassName Ingress class name
  ingressClassName: "nginx"
  ## @param ingress.pathType Ingress path type
  ## Valid options are:
  ## - ImplementationSpecific
  ## - Exact
  ## - Prefix
  pathType: "ImplementationSpecific"
  ## @param ingress.hosts [array] Hosts Configuration for the Ingress resource
  ## e.g.:
  ## hosts:
  ##   - host: "chart-example.local"
  ##     paths:
  ##       - "/"
  hosts: []
  ## @param ingress.tls [array] TLS configuration for the Ingress resource
  ## e.g.:
  ## tls:
  ##   - secretName: "chart-example.local-tls"
  ##     hosts:
  ##       - "chart-example.local"
  tls: []

## @section Network Policy parameters
## @param networkPolicy.enabled Enable creation of NetworkPolicy resources
networkPolicy:
  enabled: false

## @section Affinity parameters
## @param affinity Affinity for pod assignment
affinity: {}

## @section Node selector parameters
## @param nodeSelector Node labels for pod assignment
nodeSelector: {}

## @section Tolerations parameters
## @param tolerations Tolerations for pod assignment
tolerations: {}

## @section Security context parameters
## @param podSecurityContext.readOnlyRootFilesystem Set the root filesystem to read-only
## @param securityContext.runAsNonRoot Run containers as non-root user
## @param securityContext.runAsUser User ID to run the container
## @param securityContext.runAsGroup Group ID to run the container
podSecurityContext:
  readOnlyRootFilesystem: true
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

## @section Topology Spread Constraints parameters
## @param topologySpreadConstraints Pod Topology Spread Constraints
topologySpreadConstraints: []

## @section Probe parameters
## @param startupProbe.enabled Enable startup probe
## @param startupProbe.initialDelaySeconds Initial delay for startup probe
## @param startupProbe.timeoutSeconds Timeout for startup probe
## @param startupProbe.periodSeconds Period for startup probe
## @param startupProbe.successThreshold Success threshold for startup probe
## @param startupProbe.failureThreshold Failure threshold for startup probe
## @param customStartupProbe Custom startup probe overwriting the default startup probe
## @param customLivenessProbe Custom liveness probe overwriting the default liveness probe
## @param readinessProbe.enabled Enable readiness probe
## @param readinessProbe.initialDelaySeconds Initial delay for readiness probe
## @param readinessProbe.timeoutSeconds Timeout for readiness probe
## @param readinessProbe.periodSeconds Period for readiness probe
## @param readinessProbe.successThreshold Success threshold for readiness probe
## @param readinessProbe.failureThreshold Failure threshold for readiness probe
## @param readinessProbe.httpGet.path HTTP path for readiness probe
## @param readinessProbe.httpGet.httpHeaders[0].name HTTP header name
## @param readinessProbe.httpGet.httpHeaders[0].value HTTP header value
## @param customReadinessProbe Custom readiness probe overwriting the default readiness probe
startupProbe:
  enabled: false
  initialDelaySeconds: 5
  timeoutSeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 10
customStartupProbe: {}
customLivenessProbe: {}
readinessProbe:
  enabled: true
  initialDelaySeconds: 20
  timeoutSeconds: 1
  periodSeconds: 60
  successThreshold: 1
  failureThreshold: 5
  httpGet:
    path: "/"
    httpHeaders:
      - name: "Accept"
        value: "application/json"
customReadinessProbe: {}

## @section Termination parameters
## @param terminationGracePeriodSeconds Termination grace period in seconds
terminationGracePeriodSeconds: 60

## @section Diagnostic mode parameters
## @param diagnosticMode.enabled Enable diagnostic mode (container starts endless without any arguments)
diagnosticMode:
  enabled: false

## @section Extra parameters
## @param extraLabels Additional labels to add to the Statefulset/Deployment
## @param extraArgs Extra arguments to pass to the container arguments
extraLabels: {}
extraArgs: []

## @section Priority parameters
## @param priorityClassName Priority class name for the pods
priorityClassName: ""

## @section Metrics parameters
## @param metrics.enabled Enable Prometheus metrics
## @param metrics.port The port where the Prometheus metrics are exposed
## @param metrics.serviceMonitor.enabled Enable Prometheus Service Monitor
metrics:
  enabled: false
  port: "9090"
  serviceMonitor:
    enabled: false

####################################
##                                ##
## Custom layer-zero configuration ##
##                                ##
####################################

## @section Custom layer-zero configuration
## @param layerZeroEnvironment `LAYERZERO_ENVIRONMENT` Environment e.g. mainnet, testnet, etc.
layerZeroEnvironment: "testnet"
## @param layerZeroSupportedULNVersions `LAYERZERO_SUPPORTED_ULN_VERSIONS` List of supported ULN versions to be used by the client
layerZeroSupportedULNVersions:
  - "V2"
## @param availableChainsAndRPCEndpoints List of available chains and their corresponding RPC endpoints
## `LAYERZERO_AVAILABLE_CHAIN_NAMES` List of available chains and their corresponding RPC endpoints
## e.g.:
## availableChainsAndRPCEndpoints:
##   ethereum:
##     uris:
##       - "https://<ETHEREUM_RPC_ENDPOINT>"
##     quorum: 1
availableChainsAndRPCEndpoints: {}
## @param walletMnemonicMapping `LAYERZERO_WALLET_MNEMONIC_MAPPING_FILE_PATH` JSON string for wallet mnemonic mapping
walletMnemonicMapping: ""
## @param wallets `LAYERZERO_WALLETS_FILE_PATH` JSON string for wallets
wallets: ""
...
# yamllint enable rule:line-length
